version: '3.9'

services:
  library-apy:
    restart: always
    build: 
      context: ./server
      dockerfile: Dockerfile.dev
    container_name: app_server_nginx
    volumes: 
      - /app/node_modules
      - ./server:/app
    # ports:
    #   - 5000:5000
    depends_on:
      - mongodb
    environment:
      NODE_ENV: ${NODE_ENV}
      MONGO_URI: mongodb+srv://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@cluster0.5vcc5.mongodb.net/${DB_NAME}
    networks:
      - app_api

  mongodb:
    image: mongo
    restart: always
    ports: 
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
    volumes:
      - mongodb-data:/data/db
    networks:
      - app_api

  mongo-express: 
    image: mongo-express
    depends_on:
      - mongodb
    ports: 
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123456
    volumes:
      - mongodb-data
    networks:
      - app_api
  
  client:
    restart: always
    build:
      context: ./client
      dockerfile: Dockerfile.dev 
    container_name: library_frontend
    volumes:
      - ./app/node_modules
      - ./client:/app 
    # ports: 
    #   - 3000:3000
    depends_on: 
      - library-apy
    networks: 
      - app_api
      
  nginx: 
    restart: always
    depends_on: 
      - client
      - library-apy
    build: 
      context: ./nginx
      dockerfile: Dockerfile.dev
    ports: 
      - 8080:80
    networks:
      - app_api


networks:
  app_api:
    driver: bridge
  
volumes:
  mongodb-data:
    driver: local
      
      
      
